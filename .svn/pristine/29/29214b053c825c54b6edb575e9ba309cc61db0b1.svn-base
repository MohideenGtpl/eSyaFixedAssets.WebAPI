using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace eSyaFixedAssets.DL.Entities
{
    public partial class eSyaEnterprise : DbContext
    {
        public static string _connString = "";
        public eSyaEnterprise()
        {
        }

        public eSyaEnterprise(DbContextOptions<eSyaEnterprise> options)
            : base(options)
        {
        }

        public virtual DbSet<GtEcapcd> GtEcapcd { get; set; }
        public virtual DbSet<GtEcapct> GtEcapct { get; set; }
        public virtual DbSet<GtEfxaag> GtEfxaag { get; set; }
        public virtual DbSet<GtEfxadm> GtEfxadm { get; set; }
        public virtual DbSet<GtEfxard> GtEfxard { get; set; }
        public virtual DbSet<GtEfxarh> GtEfxarh { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Server=103.227.97.123,1433;Database=eSyaEnterprise_Beta;user id=esya;password=Gt@pl#20;");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity<GtEcapcd>(entity =>
            {
                entity.HasKey(e => e.ApplicationCode)
                    .HasName("PK_GT_ECAPCD_1");

                entity.ToTable("GT_ECAPCD");

                entity.Property(e => e.ApplicationCode).ValueGeneratedNever();

                entity.Property(e => e.CodeDesc)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.HasOne(d => d.CodeTypeNavigation)
                    .WithMany(p => p.GtEcapcd)
                    .HasForeignKey(d => d.CodeType)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_ECAPCD_GT_ECAPCT");
            });

            modelBuilder.Entity<GtEcapct>(entity =>
            {
                entity.HasKey(e => e.CodeType);

                entity.ToTable("GT_ECAPCT");

                entity.Property(e => e.CodeType).ValueGeneratedNever();

                entity.Property(e => e.CodeTyepDesc)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CodeTypeControl)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);
            });

            modelBuilder.Entity<GtEfxaag>(entity =>
            {
                entity.HasKey(e => new { e.AssetGroupId, e.AssetSubGroupId });

                entity.ToTable("GT_EFXAAG");

                entity.Property(e => e.AssetGroupId).HasColumnName("AssetGroupID");

                entity.Property(e => e.AssetSubGroupId).HasColumnName("AssetSubGroupID");

                entity.Property(e => e.AccumulatedDepreciationAc)
                    .HasColumnName("AccumulatedDepreciationAC")
                    .HasMaxLength(15);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DepreciationAccountCode).HasMaxLength(15);

                entity.Property(e => e.FixedAssetAccountCode).HasMaxLength(15);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);
            });

            modelBuilder.Entity<GtEfxadm>(entity =>
            {
                entity.HasKey(e => new { e.AssetGroupId, e.AssetSubGroupId, e.DepreciationMethod, e.EffectiveFrom });

                entity.ToTable("GT_EFXADM");

                entity.Property(e => e.AssetGroupId).HasColumnName("AssetGroupID");

                entity.Property(e => e.AssetSubGroupId).HasColumnName("AssetSubGroupID");

                entity.Property(e => e.EffectiveFrom).HasColumnType("datetime");

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DepreciationPercentage).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.EffectiveTill).HasColumnType("datetime");

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.HasOne(d => d.Asset)
                    .WithMany(p => p.GtEfxadm)
                    .HasForeignKey(d => new { d.AssetGroupId, d.AssetSubGroupId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_EFXADM_GT_EFXAAG");
            });

            modelBuilder.Entity<GtEfxard>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.InternalAssetNumber, e.IaserialNumber });

                entity.ToTable("GT_EFXARD");

                entity.Property(e => e.IaserialNumber).HasColumnName("IASerialNumber");

                entity.Property(e => e.AssetCondition)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.AssetStatus)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.AssetTag).HasMaxLength(50);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DepreciationValue).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.EquipmentSerialNumber).HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.InstallationDate).HasColumnType("datetime");

                entity.Property(e => e.LastProvisionalDeprMonthYear)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.LastTransferDate).HasColumnType("datetime");

                entity.Property(e => e.LastTransferValue).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.ProvisionalDepreciationValue).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitAcquisitionValue).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.UnitOriginalCost).HasColumnType("numeric(18, 6)");

                entity.HasOne(d => d.GtEfxarh)
                    .WithMany(p => p.GtEfxard)
                    .HasForeignKey(d => new { d.BusinessKey, d.InternalAssetNumber })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_EFXARD_GT_EFXARH");
            });

            modelBuilder.Entity<GtEfxarh>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.InternalAssetNumber });

                entity.ToTable("GT_EFXARH");

                entity.Property(e => e.AcquisitionDate).HasColumnType("datetime");

                entity.Property(e => e.AcquisitionValue).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.AssetClass)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.AssetDescription)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.AssetGroupId).HasColumnName("AssetGroupID");

                entity.Property(e => e.AssetLife).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.AssetSpecification).IsRequired();

                entity.Property(e => e.AssetSubGroupId).HasColumnName("AssetSubGroupID");

                entity.Property(e => e.AssetType)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Grndate)
                    .HasColumnName("GRNDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Grnnumber)
                    .HasColumnName("GRNNumber")
                    .HasColumnType("numeric(12, 0)");

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.OriginalCost).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.Podate)
                    .HasColumnName("PODate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ponumber)
                    .HasColumnName("PONumber")
                    .HasColumnType("numeric(12, 0)");

                entity.Property(e => e.Quantity).HasColumnType("numeric(12, 0)");

                entity.Property(e => e.VendorId).HasColumnName("VendorID");

                entity.Property(e => e.VendorName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.WarrantyPeriodFrom).HasColumnType("datetime");

                entity.Property(e => e.WarrantyPeriodTo).HasColumnType("datetime");
            });
        }
    }
}
